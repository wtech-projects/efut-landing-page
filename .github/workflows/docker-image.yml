name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/wtech-projects/efut-landing-page${{ env.IMAGE_NAME }}

      - name: Copy docker compose to artifacts
        run: |
          mkdir -p artifacts
          ls
          cp docker-compose.yml artifacts

      - uses: actions/upload-artifact@master
        with:
          name: efut-landing-page
          path: artifacts
    
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: build
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_KEY }}

    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/download-artifact@master
        with:
          name: efut-landing-page
          path: artifacts

      - name: Deploy
        run: |
          ls
          SETTINGS_TIMESTAMP=$(date +%s) docker stack deploy --with-registry-auth	--compose-file artifacts/docker-compose.yml efut
        
